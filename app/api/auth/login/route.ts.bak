// Full rewrite of login endpoint to work without external dependencies
// No imports to avoid potential server-side errors

// Handle OPTIONS request for CORS
export function OPTIONS() {
  return new Response(null, {
    status: 204, // No content
    headers: {
      "Access-Control-Allow-Origin": "*",
      "Access-Control-Allow-Methods": "POST, OPTIONS",
      "Access-Control-Allow-Headers": "Content-Type, Authorization",
    },
  });
}

// Static user data to avoid database dependencies
const USERS = {
  admin: {
    id: "1",
    username: "admin",
    password: "password123",
    role: "admin"
  },
  cashier: {
    id: "2",
    username: "cashier",
    password: "cashier123",
    role: "cashier"
  },
  manager: {
    id: "3",
    username: "manager",
    password: "manager123",
    role: "manager"
  }
};

// Simplified login that works without database
export async function POST(request: Request) {
  try {
    // Parse the request body
    const body = await request.json();
    const { username, password } = body;

    // Check if user exists in our static data
    const user = USERS[username];
    
    if (user && user.password === password) {
      // User authenticated successfully
      const responseData = {
        success: true,
        message: "Login berhasil",
        user: {
          id: user.id,
          username: user.username,
          role: user.role
        },
        // Include auth token for client-side use
        token: `${user.id}_${Date.now()}_${user.role}`
      };
      
      // Return success response
      return new Response(JSON.stringify(responseData), {
        status: 200,
        headers: {
          "Content-Type": "application/json",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, OPTIONS",
          "Access-Control-Allow-Headers": "Content-Type, Authorization",
        },
      });
    } else {
      // Invalid credentials
      return new Response(
        JSON.stringify({          success: false,
          error: "Username atau password salah" 
        }),
        {
          status: 401,
          headers: {
            "Content-Type": "application/json",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "POST, OPTIONS",
            "Access-Control-Allow-Headers": "Content-Type, Authorization",
          },
        }
      );
    }
  } catch (error) {
    console.error("Login error:", error);
    
    // Return a simplified error response
    return new Response(
      JSON.stringify({ 
        success: false, 
        error: "Login error occurred", 
        errorDetails: error instanceof Error ? error.message : "Unknown error" 
      }),
          {
            status: 200,
            headers: {
              "Content-Type": "application/json",
              "Access-Control-Allow-Origin": "*",
              "Access-Control-Allow-Methods": "POST, OPTIONS",
              "Access-Control-Allow-Headers": "Content-Type, Authorization",
            },
          }
        );
      } catch (dbError: any) {
        console.error("Database error:", dbError);
        return new Response(
          JSON.stringify({ error: "Database error: " + dbError.message }),
          {
            status: 500,
            headers: {
              "Content-Type": "application/json",
              "Access-Control-Allow-Origin": "*",
              "Access-Control-Allow-Methods": "POST, OPTIONS",
              "Access-Control-Allow-Headers": "Content-Type, Authorization",
            },
          }
        );
      }
    } else {
      // Credentials don't match
      return new Response(
        JSON.stringify({ error: "Username atau password salah" }),
        {
          status: 401,
          headers: {
            "Content-Type": "application/json",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "POST, OPTIONS",
            "Access-Control-Allow-Headers": "Content-Type, Authorization",
          },
        }
      );
    }
  } catch (error: any) {
    console.error("Login error:", error);
    return new Response(
      JSON.stringify({ error: "Autentikasi gagal: " + error.message }),
      {
        status: 500,
        headers: {
          "Content-Type": "application/json",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, OPTIONS",
          "Access-Control-Allow-Headers": "Content-Type, Authorization",
        },
      }
    );
  }
}
